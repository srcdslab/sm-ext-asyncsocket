name: Build AlliedModders Extension

on:
  push:
    branches:
      - master
      - main
    tags:
      - "*"
  pull_request:
    branches:
      - master
      - main

jobs:
  build-libuv:
    runs-on: ubuntu-20.04
    env:
      LIBUV_REF: 'v1.44.2'
      CC: "clang-10"
      CXX: "clang++-10"
    steps:
      - name: Install Linux dependencies
        shell: bash
        if: startsWith(runner.os, 'Linux')
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            gcc-multilib g++-multilib libstdc++6 lib32stdc++6 \
            libc6-dev libc6-dev-i386 linux-libc-dev \
            linux-libc-dev:i386 lib32z1-dev ${{ env.CC }}

      - name: Select compiler
        shell: bash
        if: startsWith(runner.os, 'Linux')
        run: |
          echo "CC=${{ env.CC }}" >> $GITHUB_ENV
          echo "CXX=${{ env.CXX }}" >> $GITHUB_ENV
          ${{ env.CC }} --version
          ${{ env.CXX }} --version

      - name: Checkout libuv
        uses: actions/checkout@v4
        with:
          repository: libuv/libuv
          ref: ${{ env.LIBUV_REF }}
          path: libuv
          submodules: recursive

      - name: Build libuv
        working-directory: libuv
        run: |
          bash autogen.sh
          ./configure --build=i686-pc-linux-gnu "CFLAGS=-m32" "CXXFLAGS=-m32" "LDFLAGS=-m32" --disable-shared --enable-static
          make -j 8

      - name: Upload libuv
        uses: actions/upload-artifact@v4
        with:
          name: libuv
          include-hidden-files: true
          path: libuv
          if-no-files-found: error
          retention-days: 1

  build-release-extension:
    uses: srcdslab/ci-workflows/.github/workflows/shared_build_release_am_extension.yml@v1
    needs: build-libuv
    with:
      sdks: "sdk2013"
      artifact-path: "."
